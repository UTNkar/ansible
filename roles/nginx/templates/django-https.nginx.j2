server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;

	location ~* /.well-known/ {
		allow all;
		root /var/www/moore/src/media/;
	}

	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	listen 443 ssl http2 deferred;
	listen [::]:443 ssl http2 deferred;
	server_name  {{ item.fqdn }};
	client_max_body_size 4G;

	# certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
	ssl_certificate /etc/letsencrypt/live/{{ item.certfile | default(item.fqdn) }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ item.certfile | default(item.fqdn) }}/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	# modern configuration. tweak to your needs.
	ssl_protocols TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;

	## verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/letsencrypt/live/{{ item.certfile | default(item.fqdn) }}/fullchain.pem;

	keepalive_timeout 5;

	access_log off;

	# Allow "Well-Known URIs" as per RFC 5785
	location ~* ^/.well-known/ {
		allow all;
		root {{media_root}};
	}

	location /static/ {
		alias {{ static_root }};
	}

	location /media/ {
		alias {{ media_root }};
	}

	location / {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# enable this if and only if you use HTTPS
		# proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Host $http_host;
		# we don't want nginx trying to do something clever with
		# redirects, we set the Host: header above already.
		proxy_redirect off;
		proxy_pass http://unix:/run/{{ process_name }}/socket;
	}
}
